'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _devui = require('devui');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SliderButton = function (_ref) {
  _inherits(SliderButton, _ref);

  function SliderButton() {
    var _ref2;

    var _temp, _this, _ret;

    _classCallCheck(this, SliderButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = SliderButton.__proto__ || Object.getPrototypeOf(SliderButton)).call.apply(_ref2, [this].concat(args))), _this), _this.renderPauseButton = function () {
      return _react2.default.createElement(
        _devui.Button,
        {
          onClick: _this.props.onClick,
          title: 'Pause',
          size: 'small',
          disabled: _this.props.disabled,
          theme: _this.props.theme
        },
        _react2.default.createElement(
          'svg',
          {
            viewBox: '0 0 24 24', preserveAspectRatio: 'xMidYMid meet',
            style: _this.iconStyle()
          },
          _react2.default.createElement(
            'g',
            null,
            _react2.default.createElement('path', { d: 'M6 19h4V5H6v14zm8-14v14h4V5h-4z' })
          )
        )
      );
    }, _this.renderStepButton = function (direction) {
      var isLeft = direction === 'left';
      var d = isLeft ? 'M15.41 16.09l-4.58-4.59 4.58-4.59-1.41-1.41-6 6 6 6z' : 'M8.59 16.34l4.58-4.59-4.58-4.59 1.41-1.41 6 6-6 6z';

      return _react2.default.createElement(
        _devui.Button,
        {
          size: 'small',
          title: isLeft ? 'Go back' : 'Go forward',
          onClick: _this.props.onClick,
          disabled: _this.props.disabled,
          theme: _this.props.theme
        },
        _react2.default.createElement(
          'svg',
          {
            viewBox: '0 0 24 24', preserveAspectRatio: 'xMidYMid meet',
            style: _this.iconStyle()
          },
          _react2.default.createElement(
            'g',
            null,
            _react2.default.createElement('path', { d: d })
          )
        )
      );
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(SliderButton, [{
    key: 'iconStyle',
    value: function iconStyle() {
      return {
        cursor: 'hand',
        fill: this.props.theme.base06,
        width: '1.8rem',
        height: '1.8rem'
      };
    }
  }, {
    key: 'renderPlayButton',
    value: function renderPlayButton() {
      return _react2.default.createElement(
        _devui.Button,
        {
          onClick: this.props.onClick,
          title: 'Play',
          size: 'small',
          disabled: this.props.disabled,
          theme: this.props.theme
        },
        _react2.default.createElement(
          'svg',
          {
            viewBox: '0 0 24 24', preserveAspectRatio: 'xMidYMid meet',
            style: this.iconStyle()
          },
          _react2.default.createElement(
            'g',
            null,
            _react2.default.createElement('path', { d: 'M8 5v14l11-7z' })
          )
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      switch (this.props.type) {
        case 'play':
          return this.renderPlayButton();
        case 'pause':
          return this.renderPauseButton();
        case 'stepLeft':
          return this.renderStepButton('left');
        case 'stepRight':
          return this.renderStepButton('right');
        default:
          return null;
      }
    }
  }]);

  return SliderButton;
}(_react.PureComponent || _react.Component);

SliderButton.propTypes = {
  theme: _propTypes2.default.object,
  type: _propTypes2.default.string,
  disabled: _propTypes2.default.bool,
  onClick: _propTypes2.default.func
};
exports.default = SliderButton;